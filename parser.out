Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DOTS
    NEWLINE

Grammar

Rule 0     S' -> doc
Rule 1     doc -> doc ul
Rule 2     doc -> doc ol
Rule 3     doc -> ol
Rule 4     doc -> ul
Rule 5     ol -> OL_ST list OL_EN
Rule 6     ul -> UL_ST list UL_EN
Rule 7     listitem -> ITEM_ST TEXT
Rule 8     list -> list listitem
Rule 9     list -> listitem

Terminals, with rules where they appear

DOTS                 : 
ITEM_ST              : 7
NEWLINE              : 
OL_EN                : 5
OL_ST                : 5
TEXT                 : 7
UL_EN                : 6
UL_ST                : 6
error                : 

Nonterminals, with rules where they appear

doc                  : 1 2 0
list                 : 5 6 8
listitem             : 8 9
ol                   : 2 3
ul                   : 1 4

Parsing method: LALR

state 0

    (0) S' -> . doc
    (1) doc -> . doc ul
    (2) doc -> . doc ol
    (3) doc -> . ol
    (4) doc -> . ul
    (5) ol -> . OL_ST list OL_EN
    (6) ul -> . UL_ST list UL_EN

    OL_ST           shift and go to state 2
    UL_ST           shift and go to state 5

    doc                            shift and go to state 3
    ol                             shift and go to state 1
    ul                             shift and go to state 4

state 1

    (3) doc -> ol .

    UL_ST           reduce using rule 3 (doc -> ol .)
    OL_ST           reduce using rule 3 (doc -> ol .)
    $end            reduce using rule 3 (doc -> ol .)


state 2

    (5) ol -> OL_ST . list OL_EN
    (8) list -> . list listitem
    (9) list -> . listitem
    (7) listitem -> . ITEM_ST TEXT

    ITEM_ST         shift and go to state 6

    list                           shift and go to state 7
    listitem                       shift and go to state 8

state 3

    (0) S' -> doc .
    (1) doc -> doc . ul
    (2) doc -> doc . ol
    (6) ul -> . UL_ST list UL_EN
    (5) ol -> . OL_ST list OL_EN

    UL_ST           shift and go to state 5
    OL_ST           shift and go to state 2

    ol                             shift and go to state 9
    ul                             shift and go to state 10

state 4

    (4) doc -> ul .

    UL_ST           reduce using rule 4 (doc -> ul .)
    OL_ST           reduce using rule 4 (doc -> ul .)
    $end            reduce using rule 4 (doc -> ul .)


state 5

    (6) ul -> UL_ST . list UL_EN
    (8) list -> . list listitem
    (9) list -> . listitem
    (7) listitem -> . ITEM_ST TEXT

    ITEM_ST         shift and go to state 6

    list                           shift and go to state 11
    listitem                       shift and go to state 8

state 6

    (7) listitem -> ITEM_ST . TEXT

    TEXT            shift and go to state 12


state 7

    (5) ol -> OL_ST list . OL_EN
    (8) list -> list . listitem
    (7) listitem -> . ITEM_ST TEXT

    OL_EN           shift and go to state 14
    ITEM_ST         shift and go to state 6

    listitem                       shift and go to state 13

state 8

    (9) list -> listitem .

    OL_EN           reduce using rule 9 (list -> listitem .)
    ITEM_ST         reduce using rule 9 (list -> listitem .)
    UL_EN           reduce using rule 9 (list -> listitem .)


state 9

    (2) doc -> doc ol .

    UL_ST           reduce using rule 2 (doc -> doc ol .)
    OL_ST           reduce using rule 2 (doc -> doc ol .)
    $end            reduce using rule 2 (doc -> doc ol .)


state 10

    (1) doc -> doc ul .

    UL_ST           reduce using rule 1 (doc -> doc ul .)
    OL_ST           reduce using rule 1 (doc -> doc ul .)
    $end            reduce using rule 1 (doc -> doc ul .)


state 11

    (6) ul -> UL_ST list . UL_EN
    (8) list -> list . listitem
    (7) listitem -> . ITEM_ST TEXT

    UL_EN           shift and go to state 15
    ITEM_ST         shift and go to state 6

    listitem                       shift and go to state 13

state 12

    (7) listitem -> ITEM_ST TEXT .

    OL_EN           reduce using rule 7 (listitem -> ITEM_ST TEXT .)
    ITEM_ST         reduce using rule 7 (listitem -> ITEM_ST TEXT .)
    UL_EN           reduce using rule 7 (listitem -> ITEM_ST TEXT .)


state 13

    (8) list -> list listitem .

    OL_EN           reduce using rule 8 (list -> list listitem .)
    ITEM_ST         reduce using rule 8 (list -> list listitem .)
    UL_EN           reduce using rule 8 (list -> list listitem .)


state 14

    (5) ol -> OL_ST list OL_EN .

    UL_ST           reduce using rule 5 (ol -> OL_ST list OL_EN .)
    OL_ST           reduce using rule 5 (ol -> OL_ST list OL_EN .)
    $end            reduce using rule 5 (ol -> OL_ST list OL_EN .)


state 15

    (6) ul -> UL_ST list UL_EN .

    UL_ST           reduce using rule 6 (ul -> UL_ST list UL_EN .)
    OL_ST           reduce using rule 6 (ul -> UL_ST list UL_EN .)
    $end            reduce using rule 6 (ul -> UL_ST list UL_EN .)

